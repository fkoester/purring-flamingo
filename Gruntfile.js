/*jslint node: true */
module.exports = function(grunt) {

	var runtimeConfigFile = './web/config/env.js';
	var buildtimeConfigFile = './web/config/build.js';

	var runtimeConfigName = 'env-config';
	var buildtimeConfigName = 'build-config';

	var currentHead = grunt.file.read('.git/HEAD');
	var currentBranch = currentHead ? currentHead.substring(currentHead.lastIndexOf('/') + 1).trim() : null;
	var currentBranchFile = '.git/refs/heads/' + currentBranch;
	var gitRevision = currentBranch;

	if(currentBranch && grunt.file.exists(currentBranchFile)) {
		gitRevision = grunt.file.read(currentBranchFile).trim();
	}

	grunt.loadNpmTasks('grunt-ng-constant');

	// Project configuration.
	grunt.initConfig({
		pkg: grunt.file.readJSON('package.json'),
		ngconstant: {
			// Options for all targets
			options: {
				space: '  ',
				wrap: '//Generated by grunt! Do not touch this file here!\ndefine(["angular"], function() {\n"use strict";\nreturn {%= __ngModule %}\n\n});'
			},
			// build time config file
			build: {
				options: {
					name: buildtimeConfigName,
					dest: buildtimeConfigFile
				},
				constants: {
					versionInformation: {
						versionName: '<%= pkg.version %>',
						gitRevision: gitRevision
					}
				}
			},

			// Environment targets
			env: {
				options: {
					name: runtimeConfigName,
					dest: runtimeConfigFile
				},
				constants: {
					config: {
						app_title: process.env.APP_TITLE || 'Purring Flamingo',
						app_subtitle: process.env.APP_SUBTITLE || 'Securr file exchange'
					}
				}
			}
		}
	});

	grunt.registerTask('default', ['ngconstant:env']);
	grunt.registerTask('env', ['ngconstant:env']);
	grunt.registerTask('build', ['ngconstant:build']);
};
